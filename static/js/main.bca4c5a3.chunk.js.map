{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_jsx","className","concat","mode","children","_jsxs","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","_Fragment","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","textarea","focus","readText","then","pastedText","split","join","capitalizedText","map","word","length","charAt","slice","defaultProps","aboutText","Alert","alert","role","lower","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","React","StrictMode"],"mappings":"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","file":"static/js/main.bca4c5a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n// DataType will be checked before hand as a string, taki mistake se koi or datatype na bhej de like number\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n};","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to upper case\", \"success \");\r\n    }\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lower case\", \"success \");\r\n    }\r\n    const handleClearClick = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\", \"success \");\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard\", \"success \");\r\n    }\r\n    const handlePaste = () => {\r\n        var textarea = document.getElementById(\"myBox\");\r\n        textarea.focus();\r\n\r\n        navigator.clipboard.readText()\r\n            .then(function (pastedText) {\r\n                textarea.value += pastedText;\r\n            })\r\n            // .catch(function (error) {\r\n            //     console.error(\"Failed to read clipboard:\", error);\r\n            // });\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed\", \"success \");\r\n    }\r\n    const handleCapitalization = () => {\r\n        const words = text.split(' ');\r\n        const capitalizedWords = words.map(word => {\r\n            if (word.length > 0) {\r\n                return word.charAt(0).toUpperCase() + word.slice(1);\r\n            }\r\n            return word;\r\n        });\r\n        const capitalizedText = capitalizedWords.join(' ');\r\n\r\n        setText(capitalizedText);\r\n    };\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    // Declare a new state variable, which we'll call \"text\"\r\n    const [text, setText] = useState('');\r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText (\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode === 'dark' ? 'white' : '#042743'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode === 'dark' ? 'grey' : 'white', \r\n                color: props.mode === 'dark' ? 'white' : 'black'}} id=\"myBox\" onChange={handleOnChange} rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handlePaste}>Paste Text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleCapitalization}>Capitalize First Letter</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode === 'dark' ? 'white' : '#042743'}}>\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(\" \").length} words and {text.length} charcters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>{props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n//React router import\n// import { Routes } from 'react-router-dom';\n// import {\n//   BrowserRouter as Router, Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success \");\n      document.title = \"Dark Mode\";\n      //Title chamkana - to grab users attention but yeh sahi way nahi hai, not good user experience \n      // setInterval(() => {\n      //   document.title = \"Textutils is Amazing Mode\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install Textutils Now\"\n      // }, 1500);\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success \");\n      document.title = \"Light Mode\";\n    }\n  }\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500)\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* exact used for exact path, below example- if exact not used component 1 \n            will only render for both the path\n            /users --> Component 1\n            /users/home --> Component 1 */}\n            {/* <Route exact path=\"/about\"\n              element={<About />}>\n            </Route>\n            <Route exact path=\"/\"\n              element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />}>\n            </Route>\n          </Routes> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}